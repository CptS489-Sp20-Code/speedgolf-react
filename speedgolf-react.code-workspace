{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		"textmarker.savedHighlights": [
			{
				"pattern": {
					"type": "string",
					"expression": "{this.state.confirmDelete ? this.renderConfirmDeleteDialog() : null}",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "//renderConfirmDeleteDialog: presents user with dialog to confirm deletion\r\n  //of round. Credit: https://getbootstrap.com/docs/4.0/components/modal/\r\n  renderConfirmDeleteDialog = () => {\r\n      return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n          <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <p className=\"modal-title\">Confirm Round Deletion</p>\r\n                  <button className=\"close-modal-button\" onClick={this.cancelDelete}>\r\n                    &times;</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <h4>Are you sure that you want to delete this round?</h4>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-primary btn-color-scheme\"\r\n                      onClick={this.doDelete}>\r\n                    Yes, delete round</button>\r\n                    <button className=\"btn btn-secondary\" \r\n                      onClick={this.cancelDelete}>\r\n                    No, do not delete round</button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "//doDelete -- Triggered when the user clicks on the \"Yes Delete\" button in\r\n    //the confirm delete dialog box. Call upon parent component's deleteRound to\r\n    //to actually performt he deletion of the round currently flagged for\r\n    //deletion and toggle the confirmDelete state variable to hide the confirm\r\n    //dialog box.\r\n    doDelete = () => {\r\n      this.props.deleteRound();\r\n      this.setState({confirmDelete: false});\r\n    }\r\n\r\n  //cancelDelete -- Triggered when the user chooses to cancel a delete\r\n  //operation. We just need to update state to toggle confirmDelete to false\r\n  cancelDelete = () => {\r\n    this.props.setDeleteId(\"\"); \r\n    this.setState({confirmDelete: false});\r\n  }",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "this.setState({confirmDelete: true});",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "this.props.setDeleteId(id);",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			}
		]
	}
}